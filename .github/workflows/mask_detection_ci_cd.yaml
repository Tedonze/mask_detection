name: CI/CD workflow

on: 
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  lint_test:
    name: Lint and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          poetry run pytest
  build_image:
    name: Docker Image Build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Build Image
        run: |
          docker build . --file Dockerfile --tag nick237/mask_detector:latest 
      - name: Push Image to DockerHub
        run: |
          docker login --username 'nick237' --password ${{secrets.DOCKER_PASSWORD}}
          docker push nick237/mask_detector:latest 